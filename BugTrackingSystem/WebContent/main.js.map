{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin-home/admin-home.component.css","webpack:///./src/app/admin-home/admin-home.component.html","webpack:///./src/app/admin-home/admin-home.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/developer-home/developer-home.component.css","webpack:///./src/app/developer-home/developer-home.component.html","webpack:///./src/app/developer-home/developer-home.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/manager-home/manager-home.component.css","webpack:///./src/app/manager-home/manager-home.component.html","webpack:///./src/app/manager-home/manager-home.component.ts","webpack:///./src/app/myservices/dataservice.service.ts","webpack:///./src/app/projectmembers/projectmembers.component.css","webpack:///./src/app/projectmembers/projectmembers.component.html","webpack:///./src/app/projectmembers/projectmembers.component.ts","webpack:///./src/app/tester-home/tester-home.component.css","webpack:///./src/app/tester-home/tester-home.component.html","webpack:///./src/app/tester-home/tester-home.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n<div class=\\\"col-sm-4\\\"></div>\\n<div class=\\\"col-sm-4\\\"><br><br><h1 align=\\\"center\\\">WELCOME ADMIN</h1><br><h2 align=\\\"center\\\">Select one:</h2><hr>\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"submit\\\" value=\\\"Register Employee\\\" class=\\\"btn btn-primary form-control\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"submit\\\" value=\\\"Register Project\\\" class=\\\"btn btn-primary form-control\\\">\\n  </div>\\n  <br><hr>\\n</div>\\n  <div class=\\\"col-sm-4\\\"></div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-home',\n  templateUrl: './admin-home.component.html',\n  styleUrls: ['./admin-home.component.css']\n})\nexport class AdminHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <!--<app-login></app-login>-->\\n  <!--<app-home></app-home>-->\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { DataService } from './myservices/dataservice.service';\nimport { RouterModule,Routes } from '@angular/router';\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\nimport { ManagerHomeComponent } from './manager-home/manager-home.component';\nimport { DeveloperHomeComponent } from './developer-home/developer-home.component';\nimport { TesterHomeComponent } from './tester-home/tester-home.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProjectmembersComponent } from './projectmembers/projectmembers.component';\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'admin-home',\n    component: AdminHomeComponent\n  },\n  {\n    path: 'manager-home',\n    component: ManagerHomeComponent\n  },\n  {\n    path: 'developer-home',\n    component: DeveloperHomeComponent\n  },\n  {\n    path: 'tester-home',\n    component: TesterHomeComponent\n  }\n\n\n\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    AdminHomeComponent,\n    ManagerHomeComponent,\n    DeveloperHomeComponent,\n    TesterHomeComponent,\n    ProjectmembersComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\"><br><br><h2 align=\\\"center\\\">WELCOME DEVELOPER</h2><br><hr>\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"submit\\\" value=\\\"Register Bug Solution Details\\\" class=\\\"btn btn-primary form-control\\\">\\n    </div>\\n    <hr>\\n  </div>\\n    <div class=\\\"col-sm-4\\\"></div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-developer-home',\n  templateUrl: './developer-home.component.html',\n  styleUrls: ['./developer-home.component.css']\n})\nexport class DeveloperHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>WELCOME TO HOME</h1>\\n  <p ng-if=\\\"user==101\\\">Welcome ADMIN</p>\\n  <p ng-if=\\\"user==102\\\">Welcome MANAGER</p>\\n  <p ng-if=\\\"user==103\\\">Welcome DEVELOPER</p>\\n  <p ng-if=\\\"user==104\\\">Welcome TESTER</p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1 align=\\\"center\\\">WELCOME TO BUG TRACKING SYSTEM</h1><br><br>\\n    <div class=\\\"col-sm-6\\\">\\n      <img src=\\\"./assets/bug2.jpg\\\"/>\\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n      <h2>Login</h2><hr>\\n      <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onLogin(loginForm)\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inlineRadio\\\" >User Type:&emsp;</label>\\n            <label class=\\\"radio-inline\\\">\\n                <input type=\\\"radio\\\" name=\\\"TypeId\\\" value=\\\"101\\\" ngModel #TypeId=\\\"ngModel\\\"> Admin\\n              </label>\\n              <label class=\\\"radio-inline\\\">\\n                <input type=\\\"radio\\\" name=\\\"TypeId\\\" value=\\\"102\\\" ngModel #TypeId=\\\"ngModel\\\"> Manager\\n              </label>\\n              <label class=\\\"radio-inline\\\">\\n                <input type=\\\"radio\\\" name=\\\"TypeId\\\"  value=\\\"103\\\" ngModel #TypeId=\\\"ngModel\\\"> Developer\\n              </label>\\n              <label class=\\\"radio-inline\\\">\\n                  <input type=\\\"radio\\\" name=\\\"TypeId\\\"  value=\\\"104\\\" ngModel #TypeId=\\\"ngModel\\\"> Tester\\n                </label>\\n              <br><br>    \\n          <label for=\\\"id\\\">Login ID:</label>\\n          <input type=\\\"email\\\" id=\\\"id\\\" class=\\\"form-control\\\" name=\\\"mailId\\\" ngModel #mailId=\\\"ngModel\\\" required>\\n          <br>\\n          <label for=\\\"pass\\\">Password:</label>\\n          <input type=\\\"password\\\" id=\\\"pass\\\" class=\\\"form-control\\\" name=\\\"password\\\" ngModel #password=\\\"ngModel\\\" required>\\n          <br>\\n          <input type=\\\"submit\\\" class=\\\"form-control btn btn-primary\\\" value=\\\"Login\\\">\\n        </div>\\n      </form>\\n      \\n    </div>\\n  \\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport { DataService } from '../myservices/dataservice.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public currentEmp;\n\n  constructor(public route: Router,public ds:DataService) { }\n\n  ngOnInit() {\n  }\n  onLogin(myform){\n    console.log(myform);\n  this.ds.login(myform.value).subscribe(\n    (response)=> {\n      console.log(response);\n      this.currentEmp = response;\n\n      if(this.currentEmp.TypeId == 101){\n          this.route.navigate(['admin-home']);\n      }\n      else if(this.currentEmp.TypeId == 102){\n          this.route.navigate(['manager-home']);\n      }\n      else if(this.currentEmp.TypeId == 103){\n        this.route.navigate(['developer-home']);\n    }\n    else if(this.currentEmp.TypeId == 104){\n      this.route.navigate(['tester-home']);\n    }\n    else{\n      this.route.navigate(['login']);\n    }\n    }\n  )\n}\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\"><br><br><h2 align=\\\"center\\\">WELCOME MANAGER</h2><br><hr>\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"submit\\\" value=\\\"Register Project Members\\\" class=\\\"btn btn-primary form-control\\\">\\n    </div>\\n    <hr>\\n  </div>\\n    <div class=\\\"col-sm-4\\\"></div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manager-home',\n  templateUrl: './manager-home.component.html',\n  styleUrls: ['./manager-home.component.css']\n})\nexport class ManagerHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClickProjectMembers(){}\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    empUrl=\"LoginServlet\";\r\n    empUrl1=\"EmployeeServlet\";\r\n    projUrl=\"ProjectServlet\";\r\n    constructor(public http: HttpClient){\r\n\r\n    }\r\n    public addEmployee(emp){\r\n        return this.http.post(this.empUrl1,JSON.stringify(emp));\r\n    }\r\n    public addProject(proj){\r\n        return this.http.post(this.projUrl,JSON.stringify(proj));\r\n    }\r\n    public login(logind){\r\n        return this.http.post(this.empUrl,JSON.stringify(logind));\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <label for=\\\"id\\\">Project Id:</label>\\n  <input type=\\\"text\\\" id=\\\"id\\\" name=\\\"project_id\\\" class=\\\"form-control\\\" ngModel #project_id=\\\"ngModel\\\">\\n  <label for=\\\"mname\\\">Manager Name:</label>\\n  <input type=\\\"text\\\" id=\\\"mname\\\" name=\\\"manager_name\\\" class=\\\"form-control\\\" ngModel #manager_name=\\\"ngModel\\\">\\n  <label for=\\\"memname\\\">Member Name:</label>\\n  <input type=\\\"text\\\" id=\\\"memname\\\" name=\\\"member_name\\\" class=\\\"form-control\\\" ngModel #member_name=\\\"ngModel\\\">\\n  <label for=\\\"emp\\\">Employee Status:</label>\\n  <input type=\\\"text\\\" id=\\\"emp\\\" name=\\\"emp_status\\\" class=\\\"form-control\\\" ngModel #emp_status=\\\"ngModel\\\">\\n  <input type=\\\"submit\\\" value=\\\"Register\\\" class=\\\"form-control\\\">\\n  <input type=\\\"cancel\\\" value=\\\"Reset\\\" class=\\\"form-control\\\">\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-projectmembers',\n  templateUrl: './projectmembers.component.html',\n  styleUrls: ['./projectmembers.component.css']\n})\nexport class ProjectmembersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"col-sm-4\\\"></div>\\n  <div class=\\\"col-sm-4\\\"><br><br><h2 align=\\\"center\\\">WELCOME TESTER</h2><br><hr>\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"submit\\\" value=\\\"Register Bug\\\" class=\\\"btn btn-primary form-control\\\">\\n    </div>\\n    <hr>\\n  </div>\\n    <div class=\\\"col-sm-4\\\"></div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tester-home',\n  templateUrl: './tester-home.component.html',\n  styleUrls: ['./tester-home.component.css']\n})\nexport class TesterHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}